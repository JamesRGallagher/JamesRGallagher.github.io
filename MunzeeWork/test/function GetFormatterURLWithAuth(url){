 function GetFormatterURLWithAuth(url){
        var authString = "{{authString}}"
            console.log(authString)
        if(url.indexOf("?") > -1 ){
          console.log(url + authString.replace("&amp;", ''))
              return url + authString.replace("&amp;", '&');

        }
        else{
          console.log(url + "?"+authString.replace("&amp;", ''))
              return url + "?"+authString.replace("&amp;", '');

        }
    }
      
    //Global AEK module
    var aekModule = (function () {
        var userEmail = "green";
        var apiKey = "apple";
        var allSubpages = {};
        var $cache = aek.cache();
        var onlinet = false;
        var baseAPIURL = "https://ilancasteradmin.lancaster.ac.uk/iLancasterDev/";
        var personalURL = "api/AET/v1/Profile/";
        var personalData = null;
        var allCourseData = null;
        var currentCourse = null;
        var masterCachingDebug = true;
        var $container = aek.getContainer();
        var $currentPage = aek.getCurrentPage();
        var getAPIKeyString = function () {
            return apiKey;
        };
        var getPersonalURL = function (debug) {
            if (debug === true) {
                return "thisisatesturl";
            }
            return personalURL;
        }
        return {
            userEmail: userEmail,
            allSubpages: allSubpages,
            $cache: $cache,
            onlinet: onlinet,
            baseAPIURL: baseAPIURL,
            personalData: personalData,
            allCourseData: allCourseData,
            currentCourse: currentCourse,
            $container: $container,
            $currentPage: $currentPage,
            getPersonalURL: getPersonalURL,
            masterCachingDebug: masterCachingDebug,
            getAPIKeyString: getAPIKeyString,
        }
    })();


    //******-- Utility Functions --**********//

    //Checks if subpage exists, if not, creates one and returns it.
    function getSubpage(subpageName, subpageStyleName) {
        var $subpage;
        if (aekModule.allSubpages[subpageName]) {
            console.log("Subpage already exists");
            $subpage = aekModule.allSubpages[subpageName];
            $subpage.empty();
            aek.showPage($subpage, true);
        } else {
            console.log("New Subpage");
            $subpage = aek.create("div.subpage");
            if (subpageStyleName !== null) {
                $subpage = addSubpageStyle($subpage, subpageStyleName);
            }
            aekModule.allSubpages[subpageName] = $subpage;
            aek.showPage($subpage, true);
        }
        return $subpage;
    }

    //Add a style to a given subpage
    function addSubpageStyle($subpage, subpageStyleName) {
        $subpage.on("beforeShow", function () {
            aekModule.$container.attr("id", subpageStyleName);
        });
        $subpage.on("beforeHide", function () {
            aekModule.$container.attr("id", "");
        });
        return $subpage;
    }




    function addLoader(container) {
        console.log("Add Loader");
        container.aek("loading");
    }

    function removeLoader(container) {
        console.log("Remove Loader");
        container.aek("removeLoading");
    }

    function addToCache(name, object, time) {
        aekModule.$cache.set("debug10-" + name, object);
        if (!(time > 10000)) {
            var expiryDate = new Date();
            expiryDate.setTime(expiryDate.getTime() + (time * 1000));
            aekModule.$cache.setExpiry("debug10-" + name, expiryDate);
        }
    }

    function removeFromCache(name) {
        return aekModule.$cache.kill("debug10-" + name)
    }

    function isInCache(name, debug) {
        if (debug == true && aekModule.masterCachingDebug == true) {
            if (aekModule.$cache.has("debug10-" + name)) {
                if (aekModule.$cache.get("debug10-" + name) == null) {
                    console.log("In cache and expired")
                    return false
                } else if (jQuery.isEmptyObject(aekModule.$cache.get("debug10-" + name))) {
                    console.log(aekModule.$cache.get("debug10-" + name))
                    console.log("In cache and empty")
                    return false
                } else {
                    console.log("In cache and not expired")
                    return true
                }
            }
        }
        return false;
    }

    function getFromCache(name) {
        return aekModule.$cache.get("debug10-" + name);
    }

    function errorResponse() {
        var $noContentPage = getSubpage("noContent", null);
        var $div = aek.create(
          "div", {
              "class": "width-container"
          }
        ).appendTo($container)

        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($noContentPage);

        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)

        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, ['Sorry,']).appendTo($about);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:left; font-family: 'LexiaLight', san-serif;"
        }, ["There has been an error getting your data, please check your internet connection and if the problem persits, contact ISS"]).appendTo($about);
    }

    function checkNetConnection() {
       /* jQuery.ajaxSetup({
            async: false
        });
        re = "";
        r = Math.round(Math.random() * 10000);
        $.get(GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPI2/api/AET/v1/Course/001178"), function (d) {
            console.log('true')
            re = true;
        }).error(function () {
                      console.log('false')
            re = false;
        });*/
        return true;
    }

    function setCacheOnLoad(courseID) {
        if (!isInCache('aboutPage' + courseID)) {
            //Get About Page
            aek.callService({
                url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/" + courseID ),
                method: "GET",
                dataType: "json",
                success: function (data) {
                    addToCache('about' + courseID, data);
                }
            });
        }
        if (!isInCache('gradData' + courseID)) {
            console.log(courseID)
            //Get  Alumni age
            aek.callService({
                url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/" + courseID + "/Grad"),
                method: "GET",
                dataType: "json",
                success: function (data) {
                    addToCache('gradData' + courseID, data);
                }
            });
        }
    }

    function noContent(createNewPage) {

        if (createNewPage) {
            var $noContentPage = getSubpage("noContent", null);
            var $div = aek.create(
                "div", {
                    "class": "width-container"
                }
            ).appendTo($container)
        } else {
            $noContentPage = aek.getCurrentPage();
        }

        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($noContentPage);

        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)

        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, ['Sorry,']).appendTo($about);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:left; font-family: 'LexiaLight', san-serif;"
        }, ["We will be providing some information about this soon.<br>-The iLancaster Team."]).appendTo($about);

    }


    function courseDataFor(courseID) {

        var courseData;
        var error = 0;
      
        //this is unnecassary aprt from debugging , just checking if the course data is in the cache.
        //  if (isInCache('courseData' + courseID, true)) {
        //   console.log('We are getting course data from the cache')
        //} else {
        aek.callService({
            url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/" + courseID ),
           // url:  GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/000736"), 
            method: "GET",
            dataType: "json",
            success: function (data) {
                if (data) {
                    addToCache('courseData' + courseID, data);
                  
                } else {
                    var errMessage = "An error occured when trying to retrieve your  data.<br>Please try again at a later date or contact the system administrator.";
                    errorResponse($container, errMessage);
                    console.log(errorObj)
                }
            },
            error: function (errorObj) {
             //if(errorObj.statusCode !=='parsererror') {
             //  alert('')
                var errMessage = "An error occured when trying to retrieve your  data.<br>Please try again at a later date or contact the system administrator.";
                errorResponse(aek.getCurrentPage(), errMessage);
                console.log(errorObj)
                error = 1;     
             //  }
            }
        });
        //}

        if (!error) {
         
            //if we reached this point we no it's in the cache, so get it!
            console.log(getFromCache('courseData' + courseID))
            return getFromCache('courseData' + courseID);
        }
      
    }


    /////**************--  Main Page Content--************////////

    //Start here!
    $(document).ready(function (e) {
        var email = "{{email}}"
            console.log(email)
      
         //window.bypassCid = "{{aek.request('mycourse')}}";
        if(!window.bytpassCid){
           // tmp = prompt('Whats the id')
          //  window.bypassCid = tmp;
        }
        //console.log(window.bypassCid);
        $container = aek.getCurrentPage();
        
        //Check for a valid internet connecition and if one isn't found, show the offline error page
        if (!checkNetConnection()) {

            offlinePage()

        } else {

            //Otherwise, get
            getPersonalData($container);
            

        }
    });

    function getPersonalData($container) {
        
       
        addLoader($container)
        //If personal data is in cache, load it from there
        /*  if (isInCache("pData", true)) {
              aekModule.allCourseData = getFromCache("pData").MyCourses;
              for (var key in aekModule.allCourseData) {
                  contentSelectionPage(aekModule.allCourseData[key].CourseID, $container)
                  setCacheOnLoad(aekModule.allCourseData[key].CourseID)
                  console.log('hello')
              }
          } else {*/
        //Otherwise, call the external service.
        aek.callService({
            // url: aekModule.baseAPIURL + aekModule.getPersonalURL(false) + aekModule.userEmail + "?key=" + aekModule.getAPIKeyString(),
            url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Profile"),
            method: "GET",
            dataType: "json",
            success: function (data) {
                removeLoader($container)
                console.log("Success");
                aekModule.personalData = data;
              console.log(data)
                aekModule.allCourseData = data.MyCourses;

                console.log("My Course!!")
                console.log(data.MyCourses)
                addToCache("pData", data, 1000);
                courseSelectionPage($container);
                // for (var key in aekModule.allCourseData) {
                //   console.log('1')
                // courseSelectionPage(aekModule.allCourseData[key].CourseID, $container)
                //setCacheOnLoad(aekModule.allCourseData[key].CourseID)
                //}
            },
            error: function (errorObj) {
              
              console.log('ERR')
              noContent(true)
            }
        })
        /// }
    }

    function countProps(obj) {
        var l = 0;
        for (p in obj) l++;
        return l;
    }

    

    function courseSelectionPage($container) {
       
        console.log('DIV', $div)
        var currentCourse = aekModule.allCourseData;
        console.log("current course")
        console.log(currentCourse)
        console.log('DIV', $div)
        var currentCourse = aekModule.allCourseData;
        console.log("current course")
        console.log(currentCourse)
        for (var key in currentCourse) {
            console.log("lenth" + countProps(currentCourse))
            if (countProps(currentCourse) <= 1) {
                console.log(countProps(currentCourse))
                console.log(currentCourse.CourseID)
                //contentSelectionPage(currentCourse[key].CourseID, $container)
                  
                    contentSelectionPage(currentCourse[key].CourseID, $container)
                    return;
            }
            var $div = aek.create("div", {
                "class": "width-container",
            }).appendTo($container);
            console.log('hi')
            var $contentWrapper = aek.create("div", {
                "class": "bodyblock theme-d course"
            }).appendTo($div);
            var $listview = aek.create("listview", {
                "class": "flush theme-d",
                "id": "c-" + currentCourse[key].CourseID
            }).appendTo($contentWrapper);
            console.log(currentCourse[key].CourseID)
            console.log("id" + currentCourse[key].CourseID)
            var $li = aek.create("li").appendTo($listview).aek("click");
            var $left = aek.create("div", {
                "class": "yui3-u-1-2"
            }).appendTo($li);
            var $right = aek.create("div", {
                "class": "yui3-u-1-2"
            }).appendTo($li);
            var str = currentCourse[key].Qualification;
            if(str!==null){
            var res = str.match(/\S+/g);
            
            var qual0 = res[0];
            var qual1 = res[1];
            }
            var $quali = aek.create("p", {
                "id": "titleHeader"
            }, [currentCourse[key].Title]).appendTo($left);
            if(str!==null){
              if(currentCourse[key].ModeOfStudy!==null)
            var $modeofstudy = aek.create("p", [currentCourse[key].ModeOfStudy + " (" + str + ")"]).appendTo($left);
            
          }
            $("#c-" + currentCourse[key].CourseID).click(function () {
                var idAttr = $(this).attr('id');
                var courseID = idAttr.substring(2);
                contentSelectionPage(courseID, $container);
            });
        }
        removeLoader($container)
    }

    function contentSelectionPage(courseID, $container) {
      console.log('ANOTHER C ID ' + courseID)
        aekModule.currentCourse = aekModule.allCourseData[courseID];
        //var $selectionPage = getSubpage('contentPage')
        var $selectionPage = $container;
        console.log("HERE")
        // console.log("sel", $selectionPage[0])
        var $container = aek.create("div", {
            "class": "width-container",
            "id": "backG"
        }).appendTo($selectionPage);
        addLoader($container)


        //Test string for testing not from web service

        selection = {}
        console.log(GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/" + courseID))
        console.log("COURSEID" + courseID)

        //        if (isInCache('courseData' + courseID, true)) {

        //          console.log(getFromCache('courseData' + courseID))
        //        generateBlocks(courseID, $container, getFromCache('courseData' + courseID).Optinos);
         //   } else {
            aek.callService({
               url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/" + courseID ), 
              //url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/AET/v1/Course/000736"), 
            //  url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPI2/api/AET/v1/Course/001058"), 
              method: "GET",
                dataType: "json",
                success: function (data) {
                    console.log('server')
                    generateBlocks(courseID, $container, data.Optinos);
                    addToCache('courseData' + courseID, data);
                },
                error: function (errorObj) {
                    var errMessage = "An error occured when trying to retrieve your  data.<br>Please try again at a later date or contact the system administrator.";
                    errorResponse($container, errMessage);
                    console.log(errorObj)
                }
            });
     //   }
    }



    function generateBlocks(courseID, $container, selection) {
        console.log(selection)
        var counter = 0;
        removeLoader($container)
        console.log('generatin blocks')
        console.log(courseID)
        var currentSelection = null;
        if (selection.length === 0) {
            noContent(false);
        } else {
            for (var key in selection) {
                console.log(key)
                currentSelection = selection[key];
                console.log(currentSelection)
                console.log('I don;t think the current sleectoin is active')
                if (currentSelection.isActive) {
                    counter++;
                    var $block = aek.create("div", {
                        "class": "bodyblock theme-d choiceBlock",
                        "id": currentSelection.id + "-choiceBlock"
                    }
                    ).appendTo($container);
                    console.log('Should have appended')
                    var $img = aek.create("img", {
                        "src": currentSelection.IconURL,
                        "style": "width:100%"

                    }).appendTo($block)
                    $("#" + currentSelection.id + "-choiceBlock").click(function () {
                        console.log("Here");
                        processSelection(courseID, $(this).attr('id'));
                    });
                }
            }
            console.log('here')
            console.log(counter)
            if (counter === 0) {
                noContent(false)
            }
        }
    }

    function processSelection(courseID, selectID) {
        if (!checkNetConnection()) {

            offlinePage()

        } else {
            var arr = selectID.split("-");
            var key = arr[0];
            console.log("KEY:" + key)
            var title = arr[1]
            console.log("Inside");
            console.log(key);
            if (key == "chat") {
                var chatLink = "{{ aek.screen_link('s4367') }}";
                var appendedLink = chatLink + "?title=" + aekModule.currentCourse.Title;
                console.log(appendedLink);
                window.location = appendedLink;
            } else if (key == "about") {
                aboutPage(courseID)
            } else if (key == "faq") {
                askAQuestionPage(courseID)
            } else if (key == "alum") {
                gradPage(courseID)
            } else if (key == "social") {
                socialPage(courseID)
            } else if (key == "current") {
                currentStudentsPage(courseID)
            } else if (key == "image") {
                imageGalPage(courseID)
            } else if (key == "video") {
                videoGalPage(courseID)
            } else if (key == "rl") {
                readingListPage(courseID);
            } else if (key == "sa") {
                studyAPage(courseID)
            } else if (key == "pl") {
                placementPage(courseID)
            } else if (key == "fl") {
                partOnePage(courseID)
            } else if (key == "blogs"){
                blogPage(courseID);
            } else if (key == "case"){
                casePage(courseID);
            }
        }
    }




function socialPage(courseID) {
        var requestString = "https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/SocialMedia/Combine";
        var successCount = 0;
        var data = courseDataFor(courseID);
        if (!data || !data.About || !data.About.scf) {
            console.log('Something wrong')
            console.log(data.About.scf)
            noContent(true)
            return;
        } else {
                $container = getSubpage("case");
        var $div = aek.create(
            "div", {
                "class": "width-container",

            }
        ).appendTo($container)

      

        var $textWrapper = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "style": "overflow:visible",


            }, []
        ).appendTo($div);
          
          addLoader($textWrapper)
          
          
            for (i = 0; i < data.About.scf.Facebook.length; i++) {
              console.log("Social Faecbook stuff")
                if (i == 0) {
                  console.log("Social Faecbook stuff")
                    if (data.About.scf.Facebook.length) {
                      console.log("Social Faecbook stuff")
                    if(data.About.scf.Facebook[i].GroupID){
                      console.log("Social Faecbook stuff")
                         var fbScreen = data.About.scf.Facebook[i].GroupID.split('/')[data.About.scf.Facebook[i].GroupID.split('/').length - 1]
                              console.log("Social Faecbook stuff")
                             console.log( data.About.scf.Facebook[i].GroupID.split('/'))
                                 console.log( fbScreen)
                         }
                         if(fbScreen != undefined){
                            requestString = requestString + "?Facebook=" + fbScreen;
                          }                             
                    }
                } else {
                if (data.About.scf.Facebook.length) {
                     if(data.About.scf.Facebook[i].GroupID){
                        var fbScreen = data.About.scf.Facebook[i].GroupID.split('/')[1]
                         }
                   if(fbScreen != undefined){
                        requestString = requestString + "&Facebook=" + fbScreen;
                     }
                }
           }
              }
              
              
              
            for (i = 0; i < data.About.scf.Twitter.length; i++) {
                if (i == 0 && data.About.scf.Facebook.length == 0) {
                    if (data.About.scf.Twitter.length) {
                     if(data.About.scf.Twitter[i].Screen_name){
                        var twitterScreen = data.About.scf.Twitter[i].Screen_name;
                         }
                       if(twitterScreen != undefined){
                        requestString = requestString + "?Twitter=" + twitterScreen;
                         }
                    }
                } else {
                    if (data.About.scf.Twitter.length) {
                      if(data.About.scf.Twitter[i].Screen_name){
                        var twitterScreen = data.About.scf.Twitter[i].Screen_name;
                         }
                      if(twitterScreen != undefined){
                        requestString = requestString + "&Twitter=" + twitterScreen;
                        }
                    }
                }
              }
                for (i = 0; i < data.About.scf.Instagram.length; i++) {
                    if (i == 0 && data.About.scf.Twitter.length == 0 && data.About.scf.Instagram.length == 0) {
                        if (data.About.scf.Instagram.length) {
                           if(data.About.scf.Instagram[i].userId){
                        var instaScreen = data.About.scf.Instagram[i].userId.split('/')[1]
                         }
                          if(instaScreen != undefined){
                        requestString = requestString + "?Instagram=" + instaScreen;
                            }
                        }
                    } else {
                        if (data.About.scf.Instagram.length) {
                           if(instaScreen != undefined){
                            requestString = requestString + "&Instagram=" + data.About.scf.Instagram[i];
                             }
                        }
                    }


                }

               
            }
        console.log("!!!" ,  GetFormatterURLWithAuth(requestString))
            $.get( GetFormatterURLWithAuth(requestString), function(data) {
                  console.log( data );
                   removeLoader($textWrapper)
                  for(i=0;i<data.length;i++){
                    
                    
                     
                    if(data[i].type === "Facebook"){
                      
                    
                      
                     $title = aek.create("h2", {
                            "style": "color:black;font-size:1em;text-align:left; font-family: 'LexiaLight', san-serif;"
                      }, []).appendTo($textWrapper);
                      
                      $img = aek.create("img",{
                        "style":"width:20px; height:20px;",
                        "src":data[i].profileURL
                      }).appendTo( $title )
                        
                      $name = aek.create("h4",{
                        "style":"display:inline"
                      },[" "+data[i].name]).appendTo( $title )
                        
                      $time = aek.create("h4",{
                        "style": "color:black;font-size:0.5em;text-align:left; font-family: 'LexiaLight', san-serif;"
                        },['<h4>'+data[i].createdAt.split('T')[0]+'</h4>']).appendTo($title)
                       
                      if(data[i].message){
                       $content = aek.create("h3", {
                            "style": "word-wrap: break-word;color:black;font-size:0.8em;text-align:left; font-family: 'LexiaLight', san-serif;"
                      }, [data[i].message + "<br><a href='"+data[i].link+"'>See More...</a>"] ).appendTo($textWrapper);
                       } else {
                           $content = aek.create("h3", {
                            "style": "color:black;font-size:0.8em;text-align:left; font-family: 'LexiaLight', san-serif;"
                      }, [data[i].link]).appendTo($textWrapper);
                        }
                 
                      
                      
                       }  else if (data[i].type === "Twitter"){
                     $title = aek.create("h2", {
                            "style": "color:black;font-size:1em;text-align:left; font-family: 'LexiaLight', san-serif;"
                      }, []).appendTo($textWrapper);

                          $img = aek.create("img",{
                        "style":"width:20px; height:20px;",
                        "src":data[i].profileURL
                      }).appendTo( $title )
                        
                      $name = aek.create("h4",{
                        "style":"display:inline"
                      },[" "+data[i].username]).appendTo( $title )
                         
                         
                         $time = aek.create("h4",{
                          "style": "color:black;font-size:0.5em;text-align:left; font-family: 'LexiaLight', san-serif;"
                        },['<h4>'+data[i].createdAt.split('T')[0]+'</h4>']).appendTo($title)
                                          
                                    $content = aek.create("h3", {
                            "style": "color:black;font-size:0.8em;text-align:left; font-family: 'LexiaLight', san-serif;"
                      }, [data[i].tweet] ).appendTo($textWrapper);
                       }
                    }
            })
          
          
          
            }
function readMorePage(id,content){
      var index = 0;
      var found;
      var entry;
      
      for (index = 0; index < content.length; ++index) {
          entry = content[index];
           if (entry.guid == id) {
              found = entry;
           break;
          }
      }
      
      console.log(found)
        $container = getSubpage("more");
        var $div = aek.create(
            "div", {
                "class": "width-container",

            }
        ).appendTo($container)

      

        var $textWrapper = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "style": "overflow:visible",


            }, []
        ).appendTo($div);
        var $h2 = aek.create(
            "h2", {
                "class": "titleText redText lexiaLight"
            }, [found.title]
        ).appendTo($textWrapper);
     
        
      if(found.content instanceof Array){
          var $p = aek.create(
            "p", {
                
            }, [found.content.replace('http://','https://')]
        ).appendTo($textWrapper);
       } else {
         
          var $p = aek.create(
            "p", {
                
            }, [found.content.replace('http://','https://')]
        ).appendTo($textWrapper);
      }
  }
   function casePage(courseID){
     var data = courseDataFor(courseID);
        if (!data ||!data.About || !data.About.CaseStudy) {
           noContent(true)
            console.log("no data")
            return;
        } else if (data.About.CaseStudy === null) {
            noContent(true)
            return;
        } 
          $container = getSubpage("case");
        var $div = aek.create(
            "div", {
                "class": "width-container",

            }
        ).appendTo($container)

      

        var $textWrapper = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "style": "overflow:visible",


            }, []
        ).appendTo($div);
        
        if (data.About.CaseStudyTitle == null || data.About.CaseStudyTitle == ""){
            var courseTitleCS = "Case Studies"
        }
        else{
            var courseTitleCS = data.About.CaseStudyTitle;
        }
         $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, [courseTitleCS]).appendTo($textWrapper);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:left; font-family: 'LexiaLight', san-serif;"
        }, [data.About.CaseStudy]).appendTo($textWrapper);
     


    }
    function blogPage(courseID) {
      var $container = getSubpage("blogPage", null);
        

       //  addLoader($about)
        var data = courseDataFor(courseID);
               console.log("WPDATA",data.About.WordPressLocation)
               var wpData = data.About.WordPressLocation;
               console.log(data)
               if (!data ||!data.About) {
                   noContent(true)
                   return;
               }
       var $div = aek.create(
            "div", {
                "class": "width-container",

            }
        ).appendTo($container)

      

        var $textWrapper = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "style": "overflow:visible",


            }, []
        ).appendTo($div);
        var $h2 = aek.create(
            "h2", {
                "class": "titleText redText lexiaLight"
            }, ["Blog"]
        ).appendTo($textWrapper);
        //addLoader($textWrapper)
        var $subTextWrapper = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "style": "overflow:visible",
                "id":"sub"


            }, []
        ).appendTo($textWrapper);
  
      addLoader($subTextWrapper)

         aek.callService({
                url: "http://www.lancaster.ac.uk/ug/gallagjr/buffer.php?url="+wpData,
                
                method: "GET",
                dataType: "json",

                   success: function(data) {
     console.log(data)
        
    
    $('#sub').remove()
        
     var content = data.item;
     for(i=0;i<content.length;i++){
       var $subTextWrapper = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "style": "overflow:visible"
            }, []
        ).appendTo($textWrapper);
       var $subTitle = aek.create(
            "h3", {

                                "class": "smHeadText redText lexiaLight",

            }, [content[i].title]
        ).appendTo($subTextWrapper);
        var $desc = aek.create(
            "h3", {

                                "class": " greyText lexiaLight",

            }, [content[i].description ]
        ).appendTo($subTextWrapper);
       var $anch = aek.create(
            "a",{     
              "id":content[i].guid

            }, ["Read More!"]
        ).appendTo($subTextWrapper).aek("click",function(e) {
            
         console.log(e.target.id)
          readMorePage(e.target.id,content)
  // do whatever you need to do when the item is clicked
          });
       
  
       }
    
                },
                error: function (errorObj) {
                    var errMessage = "An error occured when trying to retrieve your personal data.<br>Please try again at a later date or contact the system administrator.";
                    errorResponse($container, errMessage);
                    console.log(errorObj)
                }
            });
 
  }

    function aboutPage(courseID) {
      
       //  addLoader($about)
        var data = courseDataFor(courseID);
       if (!data ||!data.About) {
           noContent(true)
            return;
        }
      var $part2Page = getSubpage("aboutPage", null);
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
      
        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)
        console.log(data)
        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, [data.Title]).appendTo($about);
      
        if(data.About){
          var blurb = data.About.Blurbe||"Sorry, it doesn't look like there's anything here!";
           var modules = data.About.ModuleInformation||"Sorry, it doesn't look like there's anything here!";
        } else {
          var blurb = "Sorry, it doesn't look like there's anything here!";
          var modules = "Sorry, it doesn't look like there's anything here!";
        }
        console.log("BLLURB",blurb)
        $blurb = aek.create("h2", {
            "style": " line-height: 1.6em !important;  color:black;font-size:1em;text-align:left; font-family: 'Arial', san-serif;"
        }, [blurb]).appendTo($about);
      

        var $y1 = aek.create("div", {
            "class": "bodyblock expandable theme-d"
        }).appendTo($about);
        var $expand = aek.create("h2", {
            "class": "flush expand-handle theme-c",
        }, ["Modules"]).appendTo($y1);
        var $moreInfo = aek.create("h3", {
            "style": "color:black;font-size:1em;text-align:left; font-family: 'Arial', san-serif;  text-decoration:none"
        }, [modules]).appendTo($y1);
    //  removeLoader($about)
    }


    function currentStudentsPage(courseID) {
  
            var data = courseDataFor(courseID);
        if (!data ||!data.About) {
           noContent(true)
            console.log("no data")
            return;
        } else if (data.About.TalkingHeads.length === 0) {
            noContent(true)
            return;
        }


        var titles = []
        var blurbs = []
        var galleryArray = []
        var $talkingHeadPage = getSubpage("talkingHeadPage");
        $talkingHeadPage.append('<div id="blueimp-talkinghead-carousel" class="blueimp-gallery blueimp-gallery-controls blueimp-gallery-carousel"> <div class="slides"></div> <h3 class="title"></h3> <a class="prev">‹</a> <a class="next">›</a> <a id="icon" class="play-pause"></a> </div>')
        $talkingHeadPage = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "id": "talkingHeadBout"
            }
        ).appendTo($talkingHeadPage)
         $talkingHeadPage.append('<span id="talkingHeadBout"></span>')
        // If there are videos to show, show them, otherwise show defaults.
        if (data.About.TalkingHeads.length != 0) {

            for (var i = 0; i < data.About.TalkingHeads.length; i++) {
              console.log(data.About.TalkingHeads)
                titles[i] = data.About.TalkingHeads[i].title;

                blurbs[i] = data.About.TalkingHeads[i].caption;

                    
                  ytID = data.About.TalkingHeads[i].YoutubeID;
                  
              
              console.log(ytID)
                galleryArray.push({

                    type: 'text/html',
                    youtube: ytID
                });

              

            }

        }


        // Initialize the Gallery as video carousel:
        blueimp.Gallery(galleryArray, {
            onslide: function (index, slide) {
                $('#talkingHeadBout').empty();
                $courseTitle = aek.create("h1", {
                    "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
                }, [titles[index]]).appendTo($('#talkingHeadBout'));
                $blurb = aek.create("h2", {
                    "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
                }, [blurbs[index]]).appendTo($('#talkingHeadBout'));
                console.log(index)
            },
            container: '#blueimp-talkinghead-carousel',
            carousel: true

        });




    }

    function buildGradPage(data) {
        var $part2Page = getSubpage("graduatePage");
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
        //ONLY RETURN 3 FOR DEMO. When webservice is finished only a select few will be returned.
        for (i = 1; i < 4; i++) {
            //For each graduate profile
            $gradProfile = aek.create("div", {
                "class": "bodyblock theme-d",
            }).appendTo($container)
            aek.create("h1", {
                "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
            }, [data[i].Title.replace(/(\r\n|\n|\r)/gm, "")]).appendTo($gradProfile);
            //Temp - until webservice returns image
            console.log(data[i].Image)
            console.log(data[i].Image.replace(/(\r\n|\n|\r)/gm, "").replace(/ /g, ''))
            imageSrc = data[i].Image.replace(/(\r\n|\n|\r)/gm, "").replace(/ /g, '')
            //Inline style.. wouldn't work for some reason with style up top. Will look into this.
            aek.create("div", {
                //"class": "img-circular",
                "style": ' width: 150px;height: 150px;background-size: cover;border-radius: 100px; -webkit-border-radius: 100px;  -moz-border-radius: 100px;  margin-left: auto; margin-right: auto; z-index:2000; background-image: url("' + imageSrc + '");'
            }).appendTo($gradProfile);
            aek.create("h2", {
                "style": "color:black;font-size:1.2em;text-align:center; font-family: 'LexiaLight', san-serif;"
            }, [data[i].Intro]).appendTo($gradProfile);
            var $readMore = aek.create("div", {
                "class": "bodyblock expandable theme-d"
            }).appendTo($gradProfile);
            var $expand = aek.create("h2", {
                "class": "flush expand-handle theme-c",
            }, ["Expand"]).appendTo($readMore);
            var moreInfo = aek.create("h3", {
                "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
            }, [data[i].Body]).appendTo($readMore);
        }

    }

    function gradPage(courseID) {

        if (isInCache('gradData' + courseID, true)) {
            buildGradPage(getFromCache('gradData' + courseID))
        } else {
            aek.callService({
                url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPI2/api/AET/v1/Course/" + courseID + "/Grad"),
                method: "GET",
                dataType: "json",
                success: function (data) {
                    addToCache('gradData' + courseID, data)
                    buildGradPage(data)
                },
                error: function (errorObj) {
                    var errMessage = "An error occured when trying to retrieve your personal data.<br>Please try again at a later date or contact the system administrator.";
                    errorResponse($container, errMessage);
                    console.log(errorObj)
                }
            });
        }
    }

    function samplePage(courseID) {
        var $part2Page = getSubpage("graduatePage", null);
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
        var $block = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container);
        var $h2 = aek.create("h2", {
            "style": "color:#D52B1E;font-size:3.0em;text-align:center;"
        }, ["Sample Page"]).appendTo($block);
        var $h2 = aek.create("h4", {
            "style": "color:#D52B1E;font-size:3.0em;text-align:center;"
        }, ["Coming Soon..."]).appendTo($block);
    }

         function videoGalPage(courseID) {
        var data = courseDataFor(courseID);
        if (!data ||!data.About) {
           noContent(true)
            console.log("no data")
            return;
        } else if (data.About.Videos.length === 0) {
            noContent(true)
            return;
        }
        var titles = []
        var blurbs = []
        var galleryArray = []
        var $videoGalPage = getSubpage("talkingHeadPage");
        $videoGalPage.append('<div id="blueimp-talkinghead-carousel" class="blueimp-gallery blueimp-gallery-controls blueimp-gallery-carousel"> <div class="slides"></div> <h3 class="title"></h3> <a class="prev">‹</a> <a class="next">›</a> <a id="icon" class="play-pause"></a></div>')
        $videoGalPage = aek.create(
            "div", {
                "class": "bodyblock theme-d",
                "id": "talkingHeadBout"
            }
        ).appendTo($videoGalPage)
    $videoGalPage.append('<span id="desc"></span>')
        // If there are videos to show, show them, otherwise show defaults.
        if (data.About.Videos.length != 0) {

            for (var i = 0; i < data.About.Videos.length; i++) {

                titles[i] = data.About.Videos[i].title;

                blurbs[i] = data.About.Videos[i].caption;

                galleryArray.push({

                    type: 'text/html',
                    youtube: data.About.Videos[i].YoutubeID
                });

              
            }

        }
        // Initialize the Gallery as video carousel:
        blueimp.Gallery(galleryArray, {
           onslide: function (index, slide) {
              $("#desc").empty();
                $courseTitle = aek.create("h1", {
                    "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
                }, [titles[index]]).appendTo($("#desc"));
                //If there is a blurb to show for the video
                if (blurbs[index]) {
                    $blurb = aek.create("h2", {
                        "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
                    }, [blurbs[index]]).appendTo($("#desc"));
                }

                console.log(index)
            },
            container: '#blueimp-talkinghead-carousel',
            carousel: true

        });
    }

    function readingListPage(courseID) {
        var data = courseDataFor(courseID);

        if (!data || !data.About || !data.About.SuggestedReading) {
          
           noContent(true)
             return;
        }else if(data.About.SuggestedReading.length === 0){
          noContent(true)
             return;
          }else {
            var $readingListPage = getSubpage("placementPage", null);
            var $container = aek.create("div", {
                "class": "width-container"
            }).appendTo($readingListPage);
           
            var $block = aek.create("div", {
                "class": "bodyblock theme-d"
            }).appendTo($container);
             $courseTitle = aek.create("h1", {
                "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
            }, ['Suggested Reading']).appendTo($block);
          
                $($block).append(data.About.SuggestedReading)
            
 
        }




    }


    function placementPage(courseID) {

        var data = courseDataFor(courseID);
        if (!data ||!data.About) {
           noContent(true)
            console.log("no data")
            return;
        } else if (data.About.Placment === "") {
            noContent(true)
            return;
        }
        var $part2Page = getSubpage("sa", null);
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)
        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, ['Placement']).appendTo($about);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, [data.About.Placment]).appendTo($about);


    }

    function studyAPage(courseID) {
        var data = courseDataFor(courseID);
        if (!data || !data.About){
            console.log("no data")
                noContent(true)
            return;
        } else if (data.About.StudyAbraod === "") {
            noContent(true)
            return;
        }
        var $part2Page = getSubpage("sa", null);
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)
        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, ['Study abroad']).appendTo($about);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:left; font-family: 'LexiaLight', san-serif;"
        }, [data.About.StudyAbraod]).appendTo($about);
    }
    function partOnePage(courseID) {
        var data = courseDataFor(courseID);
        if (!data ||!data.About) {
           noContent(true)
            console.log("no data")
            return;
        } else if (data.About.PartOne === "" ||  data.About.PartOne == null) {
            noContent(true)
            return;
        } 
        var $part2Page = getSubpage("sa", null);
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)
        
        if (data.About.PartOneTitle == null || data.About.PartOneTitle == ""){
            var courseTitlePO = "Flexible Part One";
        }
        else{
            var courseTitlePO = data.About.PartOneTitle;
        }
        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, [courseTitlePO]).appendTo($about);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, [data.About.PartOne]).appendTo($about);
    }





    function imageGalPage(courseID) {

        var data = courseDataFor(courseID);
        if (!data ||!data.About) {
           noContent(true)
            console.log("no data")
            return;
        } else if (data.About.Images.length === 0) {
            noContent(true)
            return;
        }
        var titles = []
        var blurbs = []
        var $imageGalPage = getSubpage("imagePage");
        $imageGalPage.append('   <div id="blueimp-image-carousel" class="blueimp-gallery blueimp-gallery-carousel"><div id="slides" class="slides"><a> <img src="https://upload.wikimedia.org/wikipedia/commons/0/00/Lancaster_Castle_Ashton_Memorial.JPG" alt=""></a></div></div>')

        $imageAbout = aek.create("div", {
            "class": "bodyblock theme-d",
            "id": "imageAbout"
        }).appendTo($imageGalPage)
        var images = [];
        // If there are videos to show, show them, otherwise show defaults.
        if (data.About.Images.length !== 0) {

            for (var i = 0; i < data.About.Images.length; i++) {

                if (data[i] !== null) {
                    images.push(data.About.Images[i].URL)
                      titles.push(data.About.Images[i].title)
                          blurbs.push(data.About.Images[i].caption)
                }
            }
        }



        blueimp.Gallery(images, {
            onslide: function (index, slide) {
                $("#imageAbout").empty();
                $courseTitle = aek.create("h1", {
                    "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
                }, [titles[index]]).appendTo($imageAbout);
                $blurb = aek.create("h2", {
                    "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
                }, [blurbs[index]]).appendTo($imageAbout);
                console.log(index)
            },
            container: '#blueimp-image-carousel',
            carousel: true
        });



    }
   function askAQuestionPage(courseID) {
        var data = courseDataFor(courseID);
       // if (!data ||!data.About) {
         //  noContent(true)
           // return;
        //}
        console.log(data)
       

        toastr.options = {
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "5000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "positionClass": "toast-top-full-width",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut",

        };
        var email = "{{ aek.campusm_user_email }}"
        var $askPage = getSubpage("askPage");
 //if(!data.About.Email){
   //               $askPage.append('<div class="bodyblock theme-c width-container"> <span id="x" class="redText medHeadText" id="txt">Sorry your department has not provided this facility </span></div> </div>')
     ///   } else {
        $askPage.append('<div class="bodyblock theme-c width-container"> <span id="x" class="redText medHeadText" id="txt">If you have any questions about your course, you can ask your department directly using the form below.</span> <br> <br> <p class="text"> <textarea name="text" class="validate[required,length[140]] feedback-input" id="msg_text" placeholder="Put your question here"></textarea> </p> <span class="smallText" > We will send an email to: <b id="form_email">' + email + '</b>.We will try to respond within 2 working days but at busy times it may take longer.  </span> <br><br> <div class="submit medHeadText redText"> <input type="hidden" name="_action" value="submit"> <input type="submit" value="Ask!" class ="send" style="background-color:green; color:white"/> </div> </div>')
//      }
        $(function () {
            $(".send").click(function () {
                var data = {
                    message: $("#msg_text").val(),
                    from: email,
                    to: "mobile@lancaster.ac.uk"
                };
                console.log(GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/aet/v1/course/" + courseID + "/Ask/Email?Question=" + data.message ))
                $.ajax({
                    type: "POST",
                    url: GetFormatterURLWithAuth("https://ilancasteradmin.lancaster.ac.uk/iLancasterAPIDev/api/aet/v1/course/" + courseID + "/Ask/Email?Question=" + data.message ),

                    success: function () {
                        
                        //alert('Your question has been asked! Feel free to ask another.');
                        $("#msg_text").val('');
                        confirmationPage();
                    },
                    fail: function () {
                        console.log('Error in sending. If this problem persists please contact the iLancaster Team.');
                    }
                });
            });
        });

    }
    function confirmationPage() {

        var $part2Page = getSubpage("confirmation", null);

        var $div = aek.create(
         "div", {
             "class": "width-container"
         }
       ).appendTo($container)

        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);

        $about = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container)

        $courseTitle = aek.create("h1", {
            "style": "color:#D52B1E;font-size:2.5em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, ['Thankyou']).appendTo($about);
        $blurb = aek.create("h2", {
            "style": "color:black;font-size:1em;text-align:center; font-family: 'LexiaLight', san-serif;"
        }, ["Your question has been asked, you can expect a response in 2 working days."]).appendTo($about);



        var $button = aek.create(
          "a", {
              "class": "button theme-g",
              "href": "{{ aek.action_link('back')}}"
          },
          ["OK"]
        ).appendTo($about);

    }


    function offlinePage() {
        var $part2Page = getSubpage("offline", null);
        var $container = aek.create("div", {
            "class": "width-container"
        }).appendTo($part2Page);
        var $block = aek.create("div", {
            "class": "bodyblock theme-d"
        }).appendTo($container);
        var $h2 = aek.create("h2", {
            "style": "color:#D52B1E;font-size:2.0em;text-align:center;"
        }, ["Hi,"]).appendTo($block);

        var $h2 = aek.create("h4", {
            "style": "color:#D52B1E;font-size:1.5em;text-align:center;"
        }, ["Either your device is offline, or the iLancaster servers are down!"]).appendTo($block);
        var $h2 = aek.create("h4", {
            "style": "color:#D52B1E;font-size:1.0em;text-align:center;"
        }, ["Please connect to a network or try again later. If the problem persists, please contact the iLancaster Team."]).appendTo($block);
    }